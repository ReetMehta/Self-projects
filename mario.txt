using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace MarioGaming_GoogleTutorial
{
    public partial class Form1 : Form
    {
        // Icon   => opengameart.org

        bool goLeft, goRight, jumping, hasKey;
        int score = 0;
        int playerSpeed = 10;
        int backgroundSpeed = 8;
        int jumpSpeed = 8;
        int force = 8;


        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {

        }

        private void isKeyDown(object sender, KeyEventArgs e)
        {
            // key is pressed 
            if (e.KeyCode == Keys.Left)
            {
                goLeft = true;
            }
            if (e.KeyCode == Keys.Right)
            {
                goRight = true;
            }
            if (e.KeyCode == Keys.Space && jumping == false)
            {
                jumping = true;
            }
        }

        private void isKeyUp(object sender, KeyEventArgs e)
        {
            // key is pressed 
            if (e.KeyCode == Keys.Left)
            {
                goLeft = false;
            }
            if (e.KeyCode == Keys.Right)
            {
                goRight = false;
            }
            if (jumping == true)
            {
                jumping = false;
            }
        }

        private void gameTimerEvent(object sender, EventArgs e)
        {


            lblScore.Text = "Score : " + score;
            player.Top += jumpSpeed;


            if (goLeft == true && player.Left > 60)
            {
                player.Left -= playerSpeed;
            }

            if (goRight == true && player.Left + (player.Width + 60) < this.ClientSize.Width)
            {
                player.Left += playerSpeed;
            }

            if (goLeft == true && background.Left < 0)
            {
                background.Left += backgroundSpeed;
                MoveElements("forward");
            }

            if (goRight == true  && background.Left > -1372)
            {
                background.Left -= backgroundSpeed;
                MoveElements("back");
            }

            if (jumping == true)
            {
                jumpSpeed = -12;
                force -= 1;
            }
            else
            {
                jumpSpeed = 12;
            }

            if (jumping == true && force < 0)
            {
                jumping = false;
            }




            foreach (Control x in this.Controls)
            {
                if (x is PictureBox && (string)x.Tag =="platform" )
                {

                    if (player.Bounds.IntersectsWith(x.Bounds) && jumping == false)
                    {
                        force = 8;
                        player.Top = x.Top - player.Height;
                        jumpSpeed = 0;
                    }
                    x.BringToFront();
                }

                /// for collection of coins
                if (x is PictureBox && (string)x.Tag == "coin")
                {

                    if (player.Bounds.IntersectsWith(x.Bounds) && x.Visible == true)
                    {
                        x.Visible = false;
                        score += 1;
                    }
                }
            }

            if (player.Bounds.IntersectsWith(key.Bounds))
            {
                key.Visible = false;
                hasKey = true;
            }


            if (player.Bounds.IntersectsWith(door.Bounds) && hasKey == true )
            {
                door.Image = Properties.Resources.door_open;
                gameTimer.Stop();
                MessageBox.Show("Well done your journey is completed "+ Environment.NewLine +"Click OK to play again");
                Restart();
            }


            if (player.Top + player.Height > this.ClientSize.Height)
            {
                gameTimer.Stop();
                MessageBox.Show("You Died !!! "+ Environment.NewLine +"Click OK to play again");
                Restart();
            }
        }

        private void Restart()
        {
            Form1 newWindow = new Form1();
            newWindow.Show();
            this.Hide();
        }

        private void MoveElements(String direction)
        {
            foreach (Control x  in this.Controls)
            {
                if (x is PictureBox  && (string)x.Tag=="platform" ||(string)x.Tag=="coin" || (string)x.Tag=="door" || (string)x.Tag=="key"  )
                {
                    if (direction  =="back")
                    {
                        x.Left -= backgroundSpeed; 
                    }

                    if (direction == "forward")
                    {
                        x.Left += backgroundSpeed;
                    }
                }
            }
        }

        private void Form1_FormClosed(object sender, FormClosedEventArgs e)
        {
            Application.Exit();
        }
    }
}
