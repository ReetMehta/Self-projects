using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace HelicopterPractice
{
    public partial class Form1 : Form
    {

        bool goUP, goDown, shot, gameOver;
        int score = 0;
        int speed = 8;
        int ufoSpeed = 10;

        Random rand_num = new Random();  // where the ufo are been going to placed in the form randomly
        int index = 0;
        int playerSpeed = 7;



        public Form1()
        {
            InitializeComponent();
        }

        private void GameTimerEvent(object sender, EventArgs e)
        {

            lblScore.Text = "Score : " + score;

            if (goUP == true && player.Top > 0)
            {
                player.Top -= playerSpeed;
            }

            if (goDown == true && player.Top + player.Height < this.ClientSize.Height)
            {
                player.Top += playerSpeed;
            }

            ufo.Left -= ufoSpeed;

           // lblScore.Text = " ufo.Left  " + ufo.Left + " ufo.Width  " + ufo.Width;
            if (ufo.Left < 0)
            {
                ChangeUfo();
            }


            foreach (Control x in this.Controls)
            {
                if (x is PictureBox && (string)x.Tag =="pillar")
                {
                    x.Left -= speed;

                    if (x.Left < -100)
                    {
                        x.Left = 1000;
                    }

                    if (player.Bounds.IntersectsWith(x.Bounds))
                    {
                        GameOver();
                    }
                }

                





                if (x is PictureBox && (string)x.Tag == "bullet")
                {
                    x.Left += 100;  // speed of bullet

                    if (x.Left >1000)
                    {
                        RemoveBullet(((PictureBox)x)); 
                    }


                    if (ufo.Bounds.IntersectsWith(x.Bounds))
                    {
                        RemoveBullet(((PictureBox)x));
                        score+=1;
                        ChangeUfo();
                    }

                }
            }

            if (player.Bounds.IntersectsWith(ufo.Bounds))
            {
                GameOver();
            }

            if (score > 10)
            {
                speed = 12;
                ufoSpeed = 10;
            }

           
        }

        private void IsKeyDown(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Up)
            {
                goUP = true;
            }
            if (e.KeyCode == Keys.Down)
            {
                goDown = true;
            }

            if (e.KeyCode == Keys.Space && shot == false)
            {
                MakeBullet();
                shot = true;
            }
        }

        private void IsKeyUP(object sender, KeyEventArgs e)
        {
            if (e.KeyCode == Keys.Up)
            {
                goUP = false;
            }
            if (e.KeyCode == Keys.Down)
            {
                goDown = false;
            }

            if (shot == true)
            {
                shot = false;
            }

            if (e.KeyCode == Keys.Enter && gameOver == true)
            {
                RestartGame();
            }
        }

        private void RestartGame()
        {
            explosion.Visible = false;
            goUP = goDown = shot = gameOver = false;

            score = 0;
            speed = 8;
            ufoSpeed = 10;
            index = 0;

            lblScore.Text = "Score : " + score;
            ChangeUfo();
            player.Top = 119;  //3
            pillar1.Left = 579;
            pillar2.Left = 253;
            gameTimer.Start();
        }

        private void GameOver()
        {
            gameTimer.Stop();
            lblScore.Text = "Score " + score + " Game over press enter to restart ";
            gameOver = true;

            explosion.Visible = true;
            player.Controls.Add(explosion);
            explosion.Location = new Point(40, 5);
            explosion.BackColor = Color.Transparent;
        }

        private void RemoveBullet(PictureBox bullet)
        {
            this.Controls.Remove(bullet);
            bullet.Dispose();
        }

        private void MakeBullet()
        {
            PictureBox bullet = new PictureBox();
            bullet.BackColor = Color.Maroon;
            bullet.Height = 5;
            bullet.Width = 10;
            bullet.Left = player.Left + player.Width;
            bullet.Top = player.Top + player.Height / 2;

            bullet.Tag = "bullet";
            this.Controls.Add(bullet);

        }

        private void ChangeUfo()
        {
            if (index > 3)
            {
                index = 1;
            }
            else
            {
                index += 1;
            }

            switch (index)
            {
                case 1:
                    ufo.Image = Properties.Resources.alien1;
                    break;

                case 2:
                    ufo.Image = Properties.Resources.alien2;
                    break;

                case 3:
                    ufo.Image = Properties.Resources.alien3;
                    break;
            }
            ufo.Left = 1000;
            ufo.Top = rand_num.Next(20, this.ClientSize.Height - ufo.Height);
        }
    }
}
